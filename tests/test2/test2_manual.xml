<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
chan ch1_alpha, ch1_beta, ch1_gamma;
chan go_FuncA1, go_FuncB1;</declaration>
	<template>
		<name>Main</name>
		<declaration>clock Timer1;</declaration>
		<location id="id0" x="-136" y="-68">
			<name x="-146" y="-102">start</name>
		</location>
		<location id="id1" x="0" y="-68">
		</location>
		<location id="id2" x="136" y="-68">
		</location>
		<location id="id3" x="272" y="-68">
			<name x="262" y="-102">end</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="153" y="-85">Timer1 &gt;= 1</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="18" y="-85">go_FuncB1!</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-118" y="-85">go_FuncA1!</label>
		</transition>
	</template>
	<template>
		<name>FuncA</name>
		<parameter>chan &amp;go_FuncA, chan &amp;ch_alpha, chan &amp;ch_gamma</parameter>
		<location id="id4" x="-272" y="-204">
			<name x="-282" y="-238">start</name>
		</location>
		<location id="id5" x="0" y="-68">
			<name x="-10" y="-102">end</name>
		</location>
		<location id="id6" x="-136" y="-68">
		</location>
		<location id="id7" x="-272" y="-68">
		</location>
		<init ref="id4"/>
		<transition>
			<source ref="id4"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-272" y="-153">go_FuncA?</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="-254" y="-85">ch_alpha!</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="-118" y="-85">ch_gamma?</label>
		</transition>
	</template>
	<template>
		<name>FuncB</name>
		<parameter>chan &amp;go_FuncB, chan &amp;ch_beta</parameter>
		<location id="id8" x="-136" y="0">
		</location>
		<location id="id9" x="0" y="0">
			<name x="-10" y="-34">end</name>
		</location>
		<location id="id10" x="-272" y="0">
			<name x="-282" y="-34">start</name>
		</location>
		<init ref="id10"/>
		<transition>
			<source ref="id10"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-238" y="-17">go_FuncB?</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="synchronisation" x="-102" y="-17">ch_beta?</label>
		</transition>
	</template>
	<template>
		<name x="5" y="5">Channel</name>
		<parameter>chan &amp;ch_alpha, chan &amp;ch_beta, chan &amp;ch_gamma</parameter>
		<declaration>// Place local declarations here.</declaration>
		<location id="id11" x="-136" y="-136">
			<name x="-146" y="-170">idle</name>
		</location>
		<location id="id12" x="0" y="-136">
		</location>
		<location id="id13" x="-136" y="0">
		</location>
		<init ref="id11"/>
		<transition>
			<source ref="id13"/>
			<target ref="id11"/>
			<label kind="synchronisation" x="-221" y="-85">ch_gamma!</label>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="-68" y="-68">ch_beta!</label>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="-102" y="-153">ch_alpha?</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
Ch1 = Channel(ch1_alpha, ch1_beta, ch1_gamma);

Main1 = Main();

FuncA1 = FuncA(go_FuncA1, ch1_alpha, ch1_gamma);
FuncB1 = FuncB(go_FuncB1, ch1_beta);
// List one or more processes to be composed into a system.
system Ch1, Main1, FuncA1, FuncB1;
    </system>
	<queries>
		<query>
			<formula>E&lt;&gt; FuncB1.end</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Main1.end</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; FuncA1.end</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] not (Main1.end and (not FuncA1.end or not FuncB1.end))</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] not (not Ch1.idle and Main1.end and FuncA1.end and FuncB1.end)</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
