prog{
  scope{
    var fid_var131_makePhilosopher Func = 70
    var fid_var132_think Func = 71
    var fid_var133_eat Func = 72
    var fid_var134_getChopsticks Func = 73
    var fid_var135_returnChopsticks Func = 74
    var fid_var136_dine Func = 75
    var fid_var138_main Func = 76
  }
  funcs{
    func{
      index: 78
      args: 
      captures: 
      results: 
      scope{
        var cid_var144 Chan = -1
      }
      stmts{
        cid_var144 <- make(chan, 1)
        return
      }
    }
    func{
      index: 79
      args: 
      captures: 
      results: 
      scope{
      }
      stmts{
      }
    }
    func{
      index: 80
      args: 
      captures: 
      results: 
      scope{
      }
      stmts{
      }
    }
    func{
      index: 81
      args: 
      captures: 
      results: 
      scope{
        var cid_var145_timeout Chan = -1
      }
      stmts{
        cid_var145_timeout <- make(chan, 1)
        go 85() ['timeout' <- &(cid_var145_timeout)]
        select{
          case receive cid_var145_timeout {
            scope{
            }
            stmts{
            }
          }
        }
      }
    }
    func{
      index: 82
      args: 
      captures: 
      results: 
      scope{
      }
      stmts{
      }
    }
    func{
      index: 83
      args: cid_var146_announce
      captures: 
      results: 
      scope{
        var cid_var146_announce Chan = -1
      }
      stmts{
        send cid_var146_announce
      }
    }
    func{
      index: 84
      args: 
      captures: 
      results: 
      scope{
        var cid_var147 Chan = -1
        var cid_var148_announce Chan = -1
      }
      stmts{
        for{
          cond{
            scope{
            }
            stmts{
            }
          }
          body{
            scope{
            }
            stmts{
              inlined call makePhilosopher {
                scope{
                  var cid_var149 Chan = -1
                }
                stmts{
                  cid_var149 <- make(chan, 1)
                  return
                }
              }
            }
          }
        }
        cid_var148_announce <- make(chan, 0)
        for{
          cond{
            scope{
            }
            stmts{
            }
          }
          body{
            scope{
            }
            stmts{
            }
          }
        }
        for{
          cond{
            scope{
            }
            stmts{
            }
          }
          body{
            scope{
            }
            stmts{
              receive cid_var148_announce
            }
          }
        }
      }
    }
    func{
      index: 85
      args: 
      captures: cid_var150_timeout <- *'timeout'
      results: 
      scope{
        var cid_var150_timeout Chan = -1
      }
      stmts{
        send cid_var150_timeout
      }
    }
  }
}
