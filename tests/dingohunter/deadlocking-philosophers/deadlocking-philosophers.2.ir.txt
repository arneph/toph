prog{
  scope{
    var fid_var111_makePhilosopher Func = 54
    var fid_var112_think Func = 55
    var fid_var113_eat Func = 56
    var fid_var114_getChopsticks Func = 57
    var fid_var115_returnChopsticks Func = 58
    var fid_var116_dine Func = 59
    var fid_var118_main Func = 60
  }
  funcs{
    func{
      index: 62
      args: 
      captures: 
      results: 
      scope{
        var cid_var124 Chan = -1
      }
      stmts{
        cid_var124 <- make(chan, 1)
        return
      }
    }
    func{
      index: 63
      args: 
      captures: 
      results: 
      scope{
      }
      stmts{
      }
    }
    func{
      index: 64
      args: 
      captures: 
      results: 
      scope{
      }
      stmts{
      }
    }
    func{
      index: 65
      args: 
      captures: 
      results: 
      scope{
        var cid_var125_timeout Chan = -1
      }
      stmts{
        cid_var125_timeout <- make(chan, 1)
        go 69() ['timeout' <- &(cid_var125_timeout)]
        return
      }
    }
    func{
      index: 66
      args: 
      captures: 
      results: 
      scope{
      }
      stmts{
      }
    }
    func{
      index: 67
      args: cid_var126_announce
      captures: 
      results: 
      scope{
        var cid_var126_announce Chan = -1
      }
      stmts{
        send cid_var126_announce
      }
    }
    func{
      index: 68
      args: 
      captures: 
      results: 
      scope{
        var cid_var127 Chan = -1
        var cid_var128_announce Chan = -1
      }
      stmts{
        for{
          cond{
            scope{
            }
            stmts{
            }
          }
          body{
            scope{
            }
            stmts{
              inlined call makePhilosopher {
                scope{
                  var cid_var129 Chan = -1
                }
                stmts{
                  cid_var129 <- make(chan, 1)
                  return
                }
              }
            }
          }
        }
        cid_var128_announce <- make(chan, 0)
        for{
          cond{
            scope{
            }
            stmts{
            }
          }
          body{
            scope{
            }
            stmts{
            }
          }
        }
        for{
          cond{
            scope{
            }
            stmts{
            }
          }
          body{
            scope{
            }
            stmts{
              receive cid_var128_announce
            }
          }
        }
      }
    }
    func{
      index: 69
      args: 
      captures: cid_var130_timeout <- *'timeout'
      results: 
      scope{
        var cid_var130_timeout Chan = -1
      }
      stmts{
        send cid_var130_timeout
      }
    }
  }
}
