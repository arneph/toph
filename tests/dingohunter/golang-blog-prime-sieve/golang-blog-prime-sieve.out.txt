Options for the verification:
  Generating no trace
  Search order is depth first
  Using conservative space optimisation
  Seed is 1588268802
  State space representation uses minimal constraint systems
[2K
Verifying formula 1 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:4
 -- Throughput: 80585 states/sec, Load: 152 states[K -- Throughput: 80259 states/sec, Load: 255 states[K -- Throughput: 67112 states/sec, Load: 256 states[K -- Throughput: 69424 states/sec, Load: 239 states[K -- Throughput: 73467 states/sec, Load: 272 states[K -- Throughput: 69539 states/sec, Load: 229 states[K -- Throughput: 63983 states/sec, Load: 280 states[K -- Throughput: 73913 states/sec, Load: 254 states[K -- Throughput: 61377 states/sec, Load: 222 states[K -- Throughput: 72674 states/sec, Load: 247 states[K -- Throughput: 64001 states/sec, Load: 261 states[K -- Throughput: 70895 states/sec, Load: 172 states[K -- Throughput: 76530 states/sec, Load: 163 states[K -- Throughput: 70191 states/sec, Load: 196 states[K -- Throughput: 63263 states/sec, Load: 142 states[K -- Throughput: 73747 states/sec, Load: 177 states[K -- Throughput: 75782 states/sec, Load: 171 states[K -- Throughput: 76778 states/sec, Load: 114 states[K[2K -- Formula is satisfied.
[2K
Verifying formula 2 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:8
 -- Throughput: 10 states/sec, Load: 78 states[K -- Throughput: 79054 states/sec, Load: 160 states[K -- Throughput: 79029 states/sec, Load: 62 states[K -- Throughput: 77239 states/sec, Load: 242 states[K -- Throughput: 69159 states/sec, Load: 240 states[K -- Throughput: 73073 states/sec, Load: 253 states[K -- Throughput: 74463 states/sec, Load: 247 states[K -- Throughput: 72264 states/sec, Load: 251 states[K -- Throughput: 75068 states/sec, Load: 263 states[K -- Throughput: 68000 states/sec, Load: 234 states[K -- Throughput: 78858 states/sec, Load: 240 states[K -- Throughput: 74633 states/sec, Load: 243 states[K -- Throughput: 72318 states/sec, Load: 201 states[K -- Throughput: 56580 states/sec, Load: 152 states[K -- Throughput: 61198 states/sec, Load: 191 states[K -- Throughput: 58722 states/sec, Load: 141 states[K -- Throughput: 70346 states/sec, Load: 160 states[K -- Throughput: 72241 states/sec, Load: 143 states[K -- Throughput: 74839 states/sec, Load: 96 states[K -- Throughput: 68080 states/sec, Load: 33 states[K[2K -- Formula is satisfied.
[2K
Verifying formula 3 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:12
 -- Throughput: 5 states/sec, Load: 78 states[K -- Throughput: 69488 states/sec, Load: 160 states[K -- Throughput: 68497 states/sec, Load: 84 states[K -- Throughput: 80442 states/sec, Load: 256 states[K -- Throughput: 63908 states/sec, Load: 237 states[K -- Throughput: 66419 states/sec, Load: 255 states[K -- Throughput: 69359 states/sec, Load: 261 states[K -- Throughput: 68724 states/sec, Load: 231 states[K -- Throughput: 75188 states/sec, Load: 269 states[K -- Throughput: 65740 states/sec, Load: 252 states[K -- Throughput: 69459 states/sec, Load: 270 states[K -- Throughput: 66997 states/sec, Load: 242 states[K -- Throughput: 70350 states/sec, Load: 244 states[K -- Throughput: 72642 states/sec, Load: 191 states[K -- Throughput: 61296 states/sec, Load: 201 states[K -- Throughput: 70778 states/sec, Load: 164 states[K -- Throughput: 66860 states/sec, Load: 143 states[K -- Throughput: 76384 states/sec, Load: 161 states[K -- Throughput: 73630 states/sec, Load: 149 states[K -- Throughput: 61544 states/sec, Load: 95 states[K[2K -- Formula is satisfied.
[2K
Verifying formula 4 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:16
 -- Throughput: 3 states/sec, Load: 78 states[K -- Throughput: 73299 states/sec, Load: 154 states[K -- Throughput: 72520 states/sec, Load: 270 states[K -- Throughput: 81942 states/sec, Load: 240 states[K -- Throughput: 69286 states/sec, Load: 248 states[K -- Throughput: 74865 states/sec, Load: 256 states[K -- Throughput: 73693 states/sec, Load: 242 states[K -- Throughput: 69103 states/sec, Load: 271 states[K -- Throughput: 61469 states/sec, Load: 234 states[K -- Throughput: 55107 states/sec, Load: 239 states[K -- Throughput: 75359 states/sec, Load: 262 states[K -- Throughput: 75704 states/sec, Load: 242 states[K -- Throughput: 72839 states/sec, Load: 181 states[K -- Throughput: 78538 states/sec, Load: 196 states[K -- Throughput: 65745 states/sec, Load: 195 states[K -- Throughput: 61761 states/sec, Load: 191 states[K -- Throughput: 66701 states/sec, Load: 166 states[K -- Throughput: 71560 states/sec, Load: 149 states[K -- Throughput: 71022 states/sec, Load: 118 states[K -- Throughput: 66053 states/sec, Load: 40 states[K[2K -- Formula is satisfied.
[2K
Verifying formula 5 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:20
 -- Throughput: 2 states/sec, Load: 78 states[K -- Throughput: 79654 states/sec, Load: 94 states[K -- Throughput: 82049 states/sec, Load: 257 states[K -- Throughput: 72572 states/sec, Load: 253 states[K -- Throughput: 60883 states/sec, Load: 246 states[K -- Throughput: 68073 states/sec, Load: 267 states[K -- Throughput: 67744 states/sec, Load: 247 states[K -- Throughput: 68598 states/sec, Load: 251 states[K -- Throughput: 56952 states/sec, Load: 243 states[K -- Throughput: 62303 states/sec, Load: 208 states[K -- Throughput: 75774 states/sec, Load: 244 states[K -- Throughput: 67186 states/sec, Load: 241 states[K -- Throughput: 58682 states/sec, Load: 208 states[K -- Throughput: 60006 states/sec, Load: 205 states[K -- Throughput: 66905 states/sec, Load: 153 states[K -- Throughput: 64428 states/sec, Load: 169 states[K -- Throughput: 73494 states/sec, Load: 147 states[K -- Throughput: 70715 states/sec, Load: 145 states[K -- Throughput: 61973 states/sec, Load: 122 states[K -- Throughput: 73358 states/sec, Load: 87 states[K[2K -- Formula is satisfied.
[2K
Verifying formula 6 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:24
 -- Throughput: 2 states/sec, Load: 78 states[K -- Throughput: 70463 states/sec, Load: 94 states[K -- Throughput: 64848 states/sec, Load: 271 states[K -- Throughput: 73814 states/sec, Load: 260 states[K -- Throughput: 78513 states/sec, Load: 216 states[K -- Throughput: 73381 states/sec, Load: 249 states[K -- Throughput: 69714 states/sec, Load: 237 states[K -- Throughput: 65617 states/sec, Load: 255 states[K -- Throughput: 65877 states/sec, Load: 255 states[K -- Throughput: 72065 states/sec, Load: 203 states[K -- Throughput: 75620 states/sec, Load: 247 states[K -- Throughput: 63458 states/sec, Load: 243 states[K -- Throughput: 63295 states/sec, Load: 182 states[K -- Throughput: 68637 states/sec, Load: 161 states[K -- Throughput: 65393 states/sec, Load: 181 states[K -- Throughput: 59268 states/sec, Load: 179 states[K -- Throughput: 72733 states/sec, Load: 160 states[K -- Throughput: 73419 states/sec, Load: 166 states[K -- Throughput: 71862 states/sec, Load: 122 states[K[2K -- Formula is satisfied.
[2K
Verifying formula 7 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:28
 -- Throughput: 1 states/sec, Load: 78 states[K -- Throughput: 69750 states/sec, Load: 93 states[K -- Throughput: 77790 states/sec, Load: 269 states[K -- Throughput: 76236 states/sec, Load: 241 states[K -- Throughput: 75985 states/sec, Load: 272 states[K -- Throughput: 64157 states/sec, Load: 251 states[K -- Throughput: 66513 states/sec, Load: 244 states[K -- Throughput: 56585 states/sec, Load: 251 states[K -- Throughput: 64603 states/sec, Load: 261 states[K -- Throughput: 66503 states/sec, Load: 227 states[K -- Throughput: 71919 states/sec, Load: 246 states[K -- Throughput: 67906 states/sec, Load: 244 states[K -- Throughput: 64579 states/sec, Load: 176 states[K -- Throughput: 71528 states/sec, Load: 194 states[K -- Throughput: 68674 states/sec, Load: 199 states[K -- Throughput: 66274 states/sec, Load: 159 states[K -- Throughput: 71389 states/sec, Load: 168 states[K -- Throughput: 73327 states/sec, Load: 131 states[K -- Throughput: 69087 states/sec, Load: 96 states[K[2K -- Formula is satisfied.
[2K
Verifying formula 8 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:32
 -- Throughput: 1 states/sec, Load: 78 states[K -- Throughput: 70239 states/sec, Load: 93 states[K -- Throughput: 64920 states/sec, Load: 265 states[K -- Throughput: 76113 states/sec, Load: 267 states[K -- Throughput: 76404 states/sec, Load: 207 states[K -- Throughput: 72576 states/sec, Load: 249 states[K -- Throughput: 59644 states/sec, Load: 242 states[K -- Throughput: 53799 states/sec, Load: 269 states[K -- Throughput: 68972 states/sec, Load: 248 states[K -- Throughput: 71301 states/sec, Load: 239 states[K -- Throughput: 62929 states/sec, Load: 253 states[K -- Throughput: 57607 states/sec, Load: 238 states[K -- Throughput: 53197 states/sec, Load: 212 states[K -- Throughput: 53395 states/sec, Load: 179 states[K -- Throughput: 66897 states/sec, Load: 170 states[K -- Throughput: 70065 states/sec, Load: 169 states[K -- Throughput: 68470 states/sec, Load: 184 states[K -- Throughput: 73766 states/sec, Load: 145 states[K -- Throughput: 74596 states/sec, Load: 138 states[K -- Throughput: 79778 states/sec, Load: 101 states[K[2K -- Formula is satisfied.
[2K
Verifying formula 9 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:36
 -- Throughput: 1 states/sec, Load: 78 states[K -- Throughput: 76188 states/sec, Load: 93 states[K -- Throughput: 66286 states/sec, Load: 268 states[K -- Throughput: 73104 states/sec, Load: 254 states[K -- Throughput: 72858 states/sec, Load: 273 states[K -- Throughput: 62162 states/sec, Load: 250 states[K -- Throughput: 65388 states/sec, Load: 235 states[K -- Throughput: 61846 states/sec, Load: 264 states[K -- Throughput: 66312 states/sec, Load: 249 states[K -- Throughput: 62095 states/sec, Load: 232 states[K -- Throughput: 70230 states/sec, Load: 255 states[K -- Throughput: 57426 states/sec, Load: 244 states[K -- Throughput: 61836 states/sec, Load: 224 states[K -- Throughput: 77597 states/sec, Load: 173 states[K -- Throughput: 68778 states/sec, Load: 163 states[K -- Throughput: 63067 states/sec, Load: 187 states[K -- Throughput: 67573 states/sec, Load: 139 states[K -- Throughput: 68562 states/sec, Load: 141 states[K -- Throughput: 75332 states/sec, Load: 140 states[K -- Throughput: 72641 states/sec, Load: 84 states[K[2K -- Formula is satisfied.
[2K
Verifying formula 10 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:40
 -- Throughput: 1 states/sec, Load: 78 states[K -- Throughput: 64657 states/sec, Load: 120 states[K -- Throughput: 64616 states/sec, Load: 106 states[K -- Throughput: 78164 states/sec, Load: 271 states[K -- Throughput: 80729 states/sec, Load: 255 states[K -- Throughput: 77830 states/sec, Load: 256 states[K -- Throughput: 75941 states/sec, Load: 251 states[K -- Throughput: 68988 states/sec, Load: 227 states[K -- Throughput: 71766 states/sec, Load: 261 states[K -- Throughput: 69566 states/sec, Load: 235 states[K -- Throughput: 71443 states/sec, Load: 271 states[K -- Throughput: 66352 states/sec, Load: 253 states[K -- Throughput: 52610 states/sec, Load: 222 states[K -- Throughput: 52143 states/sec, Load: 196 states[K -- Throughput: 55786 states/sec, Load: 199 states[K -- Throughput: 64231 states/sec, Load: 172 states[K -- Throughput: 59934 states/sec, Load: 161 states[K -- Throughput: 57420 states/sec, Load: 133 states[K -- Throughput: 72818 states/sec, Load: 151 states[K -- Throughput: 65494 states/sec, Load: 137 states[K -- Throughput: 74391 states/sec, Load: 102 states[K[2K -- Formula is satisfied.
[2K
Verifying formula 11 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:44
 -- Throughput: 0 states/sec, Load: 78 states[K[2K -- Formula is satisfied.
[2K
Verifying formula 12 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:48
[2K -- Formula is NOT satisfied.
[2K
Verifying formula 13 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:52
 -- Throughput: 0 states/sec, Load: 78 states[K[2K -- Formula is satisfied.
[2K
Verifying formula 14 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:56
[2K -- Formula is NOT satisfied.
[2K
Verifying formula 15 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:60
 -- Throughput: 0 states/sec, Load: 78 states[K[2K -- Formula is satisfied.
[2K
Verifying formula 16 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:64
 -- Throughput: 0 states/sec, Load: 78 states[K[2K -- Formula is NOT satisfied.
[2K
Verifying formula 17 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:68
 -- Throughput: 0 states/sec, Load: 78 states[K[2K -- Formula is satisfied.
[2K
Verifying formula 18 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:72
 -- Throughput: 0 states/sec, Load: 78 states[K[2K -- Formula is NOT satisfied.
[2K
Verifying formula 19 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:76
 -- Throughput: 0 states/sec, Load: 78 states[K[2K -- Formula is satisfied.
[2K
Verifying formula 20 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:80
 -- Throughput: 0 states/sec, Load: 78 states[K[2K -- Formula is NOT satisfied.
[2K
Verifying formula 21 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:84
 -- Throughput: 0 states/sec, Load: 78 states[K[2K -- Formula is satisfied.
[2K
Verifying formula 22 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:88
 -- Throughput: 0 states/sec, Load: 78 states[K[2K -- Formula is satisfied.
[2K
Verifying formula 23 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:92
 -- Throughput: 0 states/sec, Load: 78 states[K[2K -- Formula is satisfied.
[2K
Verifying formula 24 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:96
 -- Throughput: 0 states/sec, Load: 78 states[K[2K -- Formula is satisfied.
[2K
Verifying formula 25 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:100
 -- Throughput: 0 states/sec, Load: 78 states[K[2K -- Formula is satisfied.
[2K
Verifying formula 26 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:104
 -- Throughput: 0 states/sec, Load: 78 states[K[2K -- Formula is satisfied.
[2K
Verifying formula 27 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:108
 -- Throughput: 0 states/sec, Load: 78 states[K[2K -- Formula is satisfied.
[2K
Verifying formula 28 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:112
 -- Throughput: 0 states/sec, Load: 78 states[K[2K -- Formula is satisfied.
[2K
Verifying formula 29 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:116
 -- Throughput: 0 states/sec, Load: 78 states[K[2K -- Formula is satisfied.
[2K
Verifying formula 30 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:120
 -- Throughput: 0 states/sec, Load: 78 states[K[2K -- Formula is satisfied.
[2K
Verifying formula 31 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:124
 -- Throughput: 0 states/sec, Load: 78 states[K[2K -- Formula is satisfied.
[2K
Verifying formula 32 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:128
 -- Throughput: 0 states/sec, Load: 78 states[K[2K -- Formula is satisfied.
[2K
Verifying formula 33 at /Users/arne/Documents/Go/src/github.com/arneph/toph/tests/dingohunter/golang-blog-prime-sieve/golang-blog-prime-sieve.q:132
[2K -- Formula is NOT satisfied.
