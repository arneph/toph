prog{
  scope{
    var fid_var31_producer Func = 18
    var fid_var33_processor Func = 19
    var fid_var36_consumer Func = 20
    var fid_var38_main Func = 21
  }
  funcs{
    func{
      index: 22
      args: cid_var41_out
      captures: 
      results: 
      scope{
        var cid_var41_out Chan = -1
      }
      stmts{
        for{
          cond{
            scope{
            }
            stmts{
            }
          }
          body{
            scope{
            }
            stmts{
              send cid_var41_out
            }
          }
        }
        close cid_var41_out
      }
    }
    func{
      index: 23
      args: cid_var43_out, cid_var42_in
      captures: 
      results: 
      scope{
        var cid_var42_in Chan = -1
        var cid_var43_out Chan = -1
      }
      stmts{
        range cid_var42_in {
          scope{
          }
          stmts{
            send cid_var43_out
          }
        }
        close cid_var43_out
      }
    }
    func{
      index: 24
      args: cid_var44_in
      captures: 
      results: 
      scope{
        var cid_var44_in Chan = -1
      }
      stmts{
        range cid_var44_in {
          scope{
          }
          stmts{
          }
        }
      }
    }
    func{
      index: 25
      args: 
      captures: 
      results: 
      scope{
        var cid_var45_ch1 Chan = -1
        var cid_var46_ch2 Chan = -1
      }
      stmts{
        cid_var45_ch1 <- make(chan, 0)
        cid_var46_ch2 <- make(chan, 0)
        go 22(0: var cid_var45_ch1 Chan = -1)
        go 23(0: var cid_var45_ch1 Chan = -1, 1: var cid_var46_ch2 Chan = -1)
        inlined call consumer {
          scope{
          }
          stmts{
            range cid_var46_ch2 {
              scope{
              }
              stmts{
              }
            }
          }
        }
      }
    }
  }
}
