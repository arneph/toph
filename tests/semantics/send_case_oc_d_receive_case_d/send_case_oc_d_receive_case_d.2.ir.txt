prog{
  scope{
    var fid_var318_main Func = 174
  }
  funcs{
    func{
      index: 177
      args: 
      captures: 
      results: 
      scope{
        var cid_var324_chA Chan = -1
        var cid_var325_chB Chan = -1
      }
      stmts{
        cid_var324_chA <- make(chan, 0)
        cid_var325_chB <- make(chan, 0)
        close cid_var325_chB
        go 178() ['chA' <- &(cid_var324_chA), 'chB' <- &(cid_var325_chB)]
        go 179() ['chA' <- &(cid_var324_chA)]
      }
    }
    func{
      index: 178
      args: 
      captures: cid_var326_chA <- *'chA', cid_var327_chB <- *'chB'
      results: 
      scope{
        var cid_var326_chA Chan = -1
        var cid_var327_chB Chan = -1
      }
      stmts{
        for{
          cond{
            scope{
            }
            stmts{
            }
          }
          body{
            scope{
            }
            stmts{
              select{
                case send cid_var326_chA {
                  scope{
                  }
                  stmts{
                  }
                }
                case receive cid_var327_chB {
                  scope{
                  }
                  stmts{
                  }
                }
              default {
                scope{
                }
                stmts{
                }
              }
              }
            }
          }
        }
      }
    }
    func{
      index: 179
      args: 
      captures: cid_var328_chA <- *'chA'
      results: 
      scope{
        var cid_var328_chA Chan = -1
      }
      stmts{
        for{
          cond{
            scope{
            }
            stmts{
            }
          }
          body{
            scope{
            }
            stmts{
              select{
                case receive cid_var328_chA {
                  scope{
                  }
                  stmts{
                  }
                }
              default {
                scope{
                }
                stmts{
                }
              }
              }
            }
          }
        }
      }
    }
  }
}
