prog{
  scope{
    var fid_var412_main Func = 222
  }
  funcs{
    func{
      index: 225
      args: 
      captures: 
      results: 
      scope{
        var cid_var419_chA Chan = -1
        var cid_var420_chB Chan = -1
      }
      stmts{
        cid_var419_chA <- make(chan, 0)
        cid_var420_chB <- make(chan, 0)
        close cid_var420_chB
        go 226() ['chA' <- &(cid_var419_chA), 'chB' <- &(cid_var420_chB)]
        go 227() ['chA' <- &(cid_var419_chA), 'chB' <- &(cid_var420_chB)]
      }
    }
    func{
      index: 226
      args: 
      captures: cid_var421_chA <- *'chA', cid_var422_chB <- *'chB'
      results: 
      scope{
        var cid_var421_chA Chan = -1
        var cid_var422_chB Chan = -1
      }
      stmts{
        for{
          cond{
            scope{
            }
            stmts{
            }
          }
          body{
            scope{
            }
            stmts{
              select{
                case send cid_var421_chA {
                  scope{
                  }
                  stmts{
                  }
                }
                case receive cid_var422_chB {
                  scope{
                  }
                  stmts{
                  }
                }
              }
            }
          }
        }
      }
    }
    func{
      index: 227
      args: 
      captures: cid_var423_chA <- *'chA', cid_var424_chB <- *'chB'
      results: 
      scope{
        var cid_var423_chA Chan = -1
        var cid_var424_chB Chan = -1
      }
      stmts{
        for{
          cond{
            scope{
            }
            stmts{
            }
          }
          body{
            scope{
            }
            stmts{
              select{
                case receive cid_var423_chA {
                  scope{
                  }
                  stmts{
                  }
                }
                case receive cid_var424_chB {
                  scope{
                  }
                  stmts{
                  }
                }
              default {
                scope{
                }
                stmts{
                }
              }
              }
            }
          }
        }
      }
    }
  }
}
