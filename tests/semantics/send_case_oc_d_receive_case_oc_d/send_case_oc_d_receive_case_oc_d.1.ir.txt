prog{
  scope{
    var fid_var700_main Func = 377
  }
  funcs{
    func{
      index: 377
      name: main
      args: 
      results: 
      scope{
        var cid_var701_chA Chan = -1
        var cid_var702_chB Chan = -1
      }
      stmts{
        cid_var701_chA <- make(chan, 0)
        cid_var702_chB <- make(chan, 0)
        close cid_var702_chB
        go 378()
        go 379()
      }
    }
    func{
      index: 378
      name: main_func378
      args: 
      results: 
      enclosing func index: 377
      scope{
      }
      stmts{
        for{
          cond{
            scope{
            }
            stmts{
            }
          }
          body{
            scope{
            }
            stmts{
              select{
                case send cid_var701_chA {
                  scope{
                  }
                  stmts{
                  }
                }
                case receive cid_var702_chB {
                  scope{
                  }
                  stmts{
                  }
                }
              default {
                scope{
                }
                stmts{
                }
              }
              }
            }
          }
        }
      }
    }
    func{
      index: 379
      name: main_func379
      args: 
      results: 
      enclosing func index: 377
      scope{
      }
      stmts{
        for{
          cond{
            scope{
            }
            stmts{
            }
          }
          body{
            scope{
            }
            stmts{
              select{
                case receive cid_var701_chA {
                  scope{
                  }
                  stmts{
                  }
                }
                case receive cid_var702_chB {
                  scope{
                  }
                  stmts{
                  }
                }
              default {
                scope{
                }
                stmts{
                }
              }
              }
            }
          }
        }
      }
    }
  }
}
