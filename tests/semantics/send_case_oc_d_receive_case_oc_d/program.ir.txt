prog{
  scope{
    var fid_var57_main Func = 30
  }
  funcs{
    func{
      index: 30
      args: 
      captures: 
      results: 
      scope{
        var cid_var58_chA Chan = -1
        var cid_var59_chB Chan = -1
      }
      stmts{
        cid_var58_chA <- make(chan, 0)
        cid_var59_chB <- make(chan, 0)
        close cid_var59_chB
        go 31()
        go 32()
      }
    }
    func{
      index: 31
      args: 
      captures: cid_var60_chA <- &(cid_var58_chA), cid_var61_chB <- &(cid_var59_chB)
      results: 
      scope{
        var cid_var60_chA Chan = -1
        var cid_var61_chB Chan = -1
      }
      stmts{
        for{
          cond{
            scope{
            }
            stmts{
            }
          }
          body{
            scope{
            }
            stmts{
              select{
                case send cid_var60_chA {
                  scope{
                  }
                  stmts{
                  }
                }
                case receive cid_var61_chB {
                  scope{
                  }
                  stmts{
                  }
                }
              default {
                scope{
                }
                stmts{
                }
              }
              }
            }
          }
        }
      }
    }
    func{
      index: 32
      args: 
      captures: cid_var62_chA <- &(cid_var58_chA), cid_var63_chB <- &(cid_var59_chB)
      results: 
      scope{
        var cid_var62_chA Chan = -1
        var cid_var63_chB Chan = -1
      }
      stmts{
        for{
          cond{
            scope{
            }
            stmts{
            }
          }
          body{
            scope{
            }
            stmts{
              select{
                case receive cid_var62_chA {
                  scope{
                  }
                  stmts{
                  }
                }
                case receive cid_var63_chB {
                  scope{
                  }
                  stmts{
                  }
                }
              default {
                scope{
                }
                stmts{
                }
              }
              }
            }
          }
        }
      }
    }
  }
}
