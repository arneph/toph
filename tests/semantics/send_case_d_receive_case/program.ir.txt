prog{
  scope{
    var fid_var5_main Func = 3
  }
  funcs{
    func{
      index: 3
      args: 
      captures: 
      results: 
      scope{
        var cid_var6_chA Chan = -1
        var cid_var7_chB Chan = -1
      }
      stmts{
        cid_var6_chA <- make(chan, 0)
        cid_var7_chB <- make(chan, 0)
        close cid_var7_chB
        go 4()
        go 5()
      }
    }
    func{
      index: 4
      args: 
      captures: cid_var8_chA <- &(cid_var6_chA)
      results: 
      scope{
        var cid_var8_chA Chan = -1
      }
      stmts{
        for{
          cond{
            scope{
            }
            stmts{
            }
          }
          body{
            scope{
            }
            stmts{
              select{
                case send cid_var8_chA {
                  scope{
                  }
                  stmts{
                  }
                }
              default {
                scope{
                }
                stmts{
                }
              }
              }
            }
          }
        }
      }
    }
    func{
      index: 5
      args: 
      captures: cid_var9_chA <- &(cid_var6_chA)
      results: 
      scope{
        var cid_var9_chA Chan = -1
      }
      stmts{
        select{
          case receive cid_var9_chA {
            scope{
            }
            stmts{
            }
          }
        }
      }
    }
  }
}
