prog{
  scope{
    var fid_var50_main Func = 27
  }
  funcs{
    func{
      index: 27
      args: 
      captures: 
      results: 
      scope{
        var cid_var51_chA Chan = -1
        var cid_var52_chB Chan = -1
      }
      stmts{
        cid_var51_chA <- make(chan, 0)
        cid_var52_chB <- make(chan, 0)
        close cid_var52_chB
        go 28()
        go 29()
      }
    }
    func{
      index: 28
      args: 
      captures: cid_var53_chA <- &(cid_var51_chA), cid_var54_chB <- &(cid_var52_chB)
      results: 
      scope{
        var cid_var53_chA Chan = -1
        var cid_var54_chB Chan = -1
      }
      stmts{
        for{
          cond{
            scope{
            }
            stmts{
            }
          }
          body{
            scope{
            }
            stmts{
              select{
                case send cid_var53_chA {
                  scope{
                  }
                  stmts{
                  }
                }
                case receive cid_var54_chB {
                  scope{
                  }
                  stmts{
                  }
                }
              default {
                scope{
                }
                stmts{
                }
              }
              }
            }
          }
        }
      }
    }
    func{
      index: 29
      args: 
      captures: cid_var55_chA <- &(cid_var51_chA), cid_var56_chB <- &(cid_var52_chB)
      results: 
      scope{
        var cid_var55_chA Chan = -1
        var cid_var56_chB Chan = -1
      }
      stmts{
        for{
          cond{
            scope{
            }
            stmts{
            }
          }
          body{
            scope{
            }
            stmts{
              select{
                case receive cid_var55_chA {
                  scope{
                  }
                  stmts{
                  }
                }
                case receive cid_var56_chB {
                  scope{
                  }
                  stmts{
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
