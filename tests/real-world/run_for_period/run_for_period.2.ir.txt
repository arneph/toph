prog{
  scope{
    var fid_var218_continuous_process Func = 114
    var fid_var219_main Func = 115
  }
  funcs{
    func{
      index: 117
      args: 
      captures: 
      results: 
      scope{
        var cid_var224_c Chan = -1
      }
      stmts{
        cid_var224_c <- make(chan, 0)
        go 119() ['c' <- &(cid_var224_c)]
        return 0: cid_var224_c
      }
    }
    func{
      index: 118
      args: 
      captures: 
      results: 
      scope{
        var cid_var225_c Chan = -1
        var cid_var226_timeout Chan = -1
      }
      stmts{
        inlined call continuous_process {
          scope{
            var cid_var227_c Chan = -1
          }
          stmts{
            cid_var227_c <- make(chan, 0)
            go 119() ['c' <- &(cid_var227_c)]
            cid_var225_c <- cid_var227_c
            return
          }
        }
        for{
          cond{
            scope{
            }
            stmts{
            }
          }
          body{
            scope{
            }
            stmts{
              select{
                case receive cid_var225_c {
                  scope{
                  }
                  stmts{
                  }
                }
                case receive cid_var226_timeout {
                  scope{
                  }
                  stmts{
                  }
                }
              }
            }
          }
        }
      }
    }
    func{
      index: 119
      args: 
      captures: cid_var228_c <- *'c'
      results: 
      scope{
        var cid_var228_c Chan = -1
      }
      stmts{
        for{
          cond{
            scope{
            }
            stmts{
            }
          }
          body{
            scope{
            }
            stmts{
              send cid_var228_c
            }
          }
        }
      }
    }
  }
}
