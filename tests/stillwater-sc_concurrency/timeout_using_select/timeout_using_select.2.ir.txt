prog{
  scope{
    var fid_var229_timed_process Func = 120
    var fid_var230_main Func = 121
  }
  funcs{
    func{
      index: 123
      args: 
      captures: 
      results: 
      scope{
        var cid_var234_c Chan = -1
      }
      stmts{
        cid_var234_c <- make(chan, 0)
        go 125() ['c' <- &(cid_var234_c)]
        return 0: cid_var234_c
      }
    }
    func{
      index: 124
      args: 
      captures: 
      results: 
      scope{
        var cid_var235_c Chan = -1
      }
      stmts{
        inlined call timed_process {
          scope{
            var cid_var236_c Chan = -1
          }
          stmts{
            cid_var236_c <- make(chan, 0)
            go 125() ['c' <- &(cid_var236_c)]
            cid_var235_c <- cid_var236_c
            return
          }
        }
        for{
          cond{
            scope{
            }
            stmts{
            }
          }
          body{
            scope{
            }
            stmts{
              select{
                case receive cid_var235_c {
                  scope{
                  }
                  stmts{
                  }
                }
              }
            }
          }
        }
      }
    }
    func{
      index: 125
      args: 
      captures: cid_var237_c <- *'c'
      results: 
      scope{
        var cid_var237_c Chan = -1
      }
      stmts{
        for{
          cond{
            scope{
            }
            stmts{
            }
          }
          body{
            scope{
            }
            stmts{
              send cid_var237_c
            }
          }
        }
      }
    }
  }
}
